---
version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181

      # Best practices
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
# ------------------------------------------------------------------------------------------------------------------------------  
  kafka-broker1:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-broker1
    container_name: kafka-broker1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker1:9092

      # Best practices
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPICS_ENABLE: 'false'
      KAFKA_MIN_INSYNC_REPLICAS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 2190
      KAFKA_SEGMENT_BYTES: 1073741824
      KAFKA_REQUEST_TIMEOUT_MS: 15000
  
  kafka-broker2:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-broker2
    container_name: kafka-broker2
    depends_on:
      - zookeeper
    ports:
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker2:9093

      # Best practices
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPICS_ENABLE: 'false'
      KAFKA_MIN_INSYNC_REPLICAS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 2190
      KAFKA_SEGMENT_BYTES: 1073741824
      KAFKA_REQUEST_TIMEOUT_MS: 15000

  kafka-broker3:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-broker3
    container_name: kafka-broker3
    depends_on:
      - zookeeper
    ports:
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker3:9094

      # Best practices
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPICS_ENABLE: 'false'
      KAFKA_MIN_INSYNC_REPLICAS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 2190
      KAFKA_SEGMENT_BYTES: 1073741824
      KAFKA_REQUEST_TIMEOUT_MS: 15000
# ------------------------------------------------------------------------------------------------------------------------------  
  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-broker1:9092,kafka-broker2:9093,kafka-broker3:9094'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

      # Best practices
      SCHEMA_REGISTRY_LEADER_ELIGIBILITY: 'true'
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: backward
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: 'schema-registry-group'
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: __schemas
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 3
      SCHEMA_REGISTRY_KAFKASTORE.INIT.TIMEOUT.MS: 60000
      SCHEMA_REGISTRY_KAFKASTORE_TIMEOUT_MS: 500
      SCHEMA_REGISTRY_KAFKASTORE_ZK_SESSION_TIMEOUT_MS: 500
      SCHEMA_REGISTRY_SHUTDOWN_GRACEFUL_MS: 1000
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
# ------------------------------------------------------------------------------------------------------------------------------
  kafka-connect:
    image: cnfldemos/cp-server-connect-datagen:0.4.0-6.0.0
    build:
      context: .
      dockerfile: Dockerfile-confluenthub
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - schema-registry
    volumes:
      - ${PWD}/../scripts/connect-config:/connect-config
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka-broker1:9092,kafka-broker2:9093,kafka-broker3:9094'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: '/usr/share/confluent-hub-components'

      # Best practices
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_TOPIC: __connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_TOPIC: __connect_offsets
      CONNECT_OFFSET_STORAGE_PARTITIONS: 25
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: __connect_status
      CONNECT_STATUS_STORAGE_PARTITIONS: 5
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 5000
      CONNECT_SESSION_TIMEOUT_MS: 15000
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 300000
      CONNECT_REQUEST_TIMEOUT_MS: 20000
      CONNECT_WORKER_SYNC_TIMEOUT_MS: 3000
      CONNECT_WORKER_UNSYNC_BACKOFF_MS: 300000
      CONNECT_METADATA_MAX_AGE_MS: 300000
      CONNECT_RECONNECT_BACKOFF_MS: 50
      CONNECT_RETRY_BACKOFF_MS: 100

      # Monitoring
# ------------------------------------------------------------------------------------------------------------------------------
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.0.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - "8089:8089"
    depends_on:
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: 'kafka-broker1:9092,kafka-broker2:9093,kafka-broker3:9094'
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://ksqldb-server:8089"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

      # Best Practices
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_AUTO_OFFSET_RESET: "earliest"
      KSQL_COMMIT_INTERVAL_MS: 0
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_STREAMS_PRODUCER_RETRIES: 2147483647
      KSQL_KSQL_STREAMS_PRODUCER_CONFLUENT_BATCH_EXPIRE_MS: 9223372036854775807
      KSQL_KSQL_STREAMS_PRODUCER_REQUEST_TIMEOUT_MS: 300000
      KSQL_KSQL_STREAMS_PRODUCER_MAX_BLOCK_MS: 9223372036854775807
      KSQL_KSQL_STREAMS_PRODUCER_DELIVERY_TIMEOUT_MS: 2147483647
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 3
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 3
      KSQL_KSQL_SINK_REPLICAS: 3
  
  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.0.0
    container_name: ksqldb-cli
    volumes:
      - ${PWD}/../scripts/ksql-queries.sql:/ksql-queries.sql
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
